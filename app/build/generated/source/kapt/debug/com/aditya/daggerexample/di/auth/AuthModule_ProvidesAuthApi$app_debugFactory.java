// Generated by Dagger (https://dagger.dev).
package com.aditya.daggerexample.di.auth;

import com.aditya.daggerexample.network.auth.AuthApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthModule_ProvidesAuthApi$app_debugFactory implements Factory<AuthApi> {
  private final Provider<Retrofit> retrofitProvider;

  public AuthModule_ProvidesAuthApi$app_debugFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public AuthApi get() {
    return providesAuthApi$app_debug(retrofitProvider.get());
  }

  public static AuthModule_ProvidesAuthApi$app_debugFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new AuthModule_ProvidesAuthApi$app_debugFactory(retrofitProvider);
  }

  public static AuthApi providesAuthApi$app_debug(Retrofit retrofit) {
    return Preconditions.checkNotNull(AuthModule.INSTANCE.providesAuthApi$app_debug(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
